
Shader
{
	Name = "PBR Deferred";
	Type = SHADER_DEFERRED;
}

Global
{
	#include "common/common.hlsl"

	struct VS_Input
	{
		#include "common/vertex_input.hlsl"
	};

	struct PS_Input
	{
		#include "common/pixel_input.hlsl"
	};

	struct PS_Output
	{
		#include "common/deferred_output.hlsl"
	};
}

VS
{
	#include "common/vertex.hlsl"

	PS_Input Main(VS_Input input)
	{
        PS_Input output = ProcessVertex(input);

		FinalizeVertex(input, output);
        return output;
	}
}

PS
{
	PS_Output Main(PS_Input input)
	{
		PS_Output output;
		output.vColor = SampleTexture2D(vBaseColor, input.vTextureCoords) * vColorTint;
		output.vNormal = input.vNormalWs;
		output.vEmission = float3(0.f, 0.f, 0.f);
		output.vMaterial = float4(0.f, 0.f, 0.f, 0.f);

		return output;
	}
}
